#### Задание 3: Генератор сложного пароля  

# Условие:  
# Пользователь вводит пароль. Проверьте его безопасность по критериям:  
# 1. Длина ≥ 8 символов.  
# 2. Содержит хотя бы одну цифру.  
# 3. Содержит хотя бы одну заглавную и одну строчную букву.  
# 4. Содержит спецсимвол из набора !@#$%^&*.  

# Вывод:  
# - Если пароль соответствует всем критериям: "Безопасный пароль".  
# - Если не соответствует: перечислить все нарушения через запятую в порядке проверки.  

# Пример:  
  
# Введите пароль: Pass123  
# Нарушения: длина < 8, отсутствует спецсимвол  
#_______________________________________________
  
password = input('Password:')
message = 'Безопасный пароль'
error_msg_list = []  # Задаю пустой список для последующего добавления элементов(строк с ошибками).
# P.S. Можно было и через счетчик и строкой,но списки нравятся больше

# определим в переменные наличие/отсутствие в пароле цифр, спецсимволов, верхнего/нижнего регистра
upper_char = any(char.isupper() for char in password)
lower_char = any(char.islower() for char in password)
digit = any(char.isdigit() for char in password)

#  создадим список подходящих спецсимволов
special_chars_list = ['!', '@', '$', '%', '&', '#', '*', '(', ')', '_', '+', '=', '-', '`', '~ ', '[', ']', '\'', '{', '}', '|']
special_char = any(char in special_chars_list for char in password)

# Осуществляем проверки с помощью условных конструкций
if len(password) < 8:
    error_msg_list.append('длина < 8') 
if not upper_char:
    error_msg_list.append('нет заглавных букв')
if not lower_char:
    error_msg_list.append('нет строчных букв')
if not digit:
    error_msg_list.append('нет цифр')
if not special_char:
    error_msg_list.append('нет спецсимволов')
if error_msg_list:  # Если в всписке не пусто(ошибки добавились), то выводим ошибки в строку через запятую без последней запятой
    print(f'У нас следующие проблемы: {', '.join(error_msg_list)}')
else:
    print("Password is safety")   

