### –ó–∞–¥–∞–Ω–∏—è –ø–æ —É—Å–ª–æ–≤–Ω—ã–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ Python  


#### –ó–∞–¥–∞–Ω–∏–µ 1: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏  
# –£—Å–ª–æ–≤–∏–µ:  
# –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:  
# 1. –°—É–º–º–∞ (`amount`) –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π –∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å 100000.  
# 2. –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ (`operation_type`) –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ "–ø–µ—Ä–µ–≤–æ–¥" –∏–ª–∏ "–æ–ø–ª–∞—Ç–∞".  
# 3. –î–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π "–ø–µ—Ä–µ–≤–æ–¥" –∫–æ–º–∏—Å—Å–∏—è (`fee`) –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å 5% –æ—Ç —Å—É–º–º—ã.  
# 4. –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ü–∏—è "–æ–ø–ª–∞—Ç–∞", —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫—Ä–∞—Ç–Ω–∞ 100.  
# –í—ã–≤–æ–¥:  
# - –ï—Å–ª–∏ –≤—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã: "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞".  
# - –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –Ω–∞—Ä—É—à–µ–Ω–æ: "–û—à–∏–±–∫–∞: [–æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã]" (—É–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—É—é –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—É—é –æ—à–∏–±–∫—É –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–æ–≤–µ—Ä–∫–∏).  


# amount = 90000
# operation_type = '–ø–µ—Ä–µ–≤–æ–¥'  
# fee = 700  
  
# if 0 >= amount or amount > 100000:
#     print('–û—à–∏–±–∫–∞: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Å—É–º–º–∞')

# elif operation_type.lower() not in ['–ø–µ—Ä–µ–≤–æ–¥', '–æ–ø–ª–∞—Ç–∞']:
#     print('–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏')

# elif operation_type == '–ø–µ—Ä–µ–≤–æ–¥' and fee > (amount / 100 * 5):
#     print('–û—à–∏–±–∫–∞: –∫–æ–º–∏—Å—Å–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 5%')

# elif operation_type == '–æ–ø–ª–∞—Ç–∞' and (amount % 100) != 0:
#     print('–û—à–∏–±–∫–∞: –Ω–µ –∫—Ä–∞—Ç–Ω–æ 100')

# else:
#     print('—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞')


# if operation_type.lower() == '–ø–µ—Ä–µ–≤–æ–¥' or '–æ–ø–ª–∞—Ç–∞':     # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
#     if 0 >= amount or amount > 100000:      # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É–º–º—ã
#         print('–û—à–∏–±–∫–∞: –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Å—É–º–º–∞')
#     elif operation_type == '–ø–µ—Ä–µ–≤–æ–¥' and fee > (amount / 100 * 5):      # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∏—Å—Å–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞
#         print('–û—à–∏–±–∫–∞: –∫–æ–º–∏—Å—Å–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç 5%')
#     elif operation_type == '–æ–ø–ª–∞—Ç–∞' and (amount % 100) != 0:     # —Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∞—Ç–Ω–æ—Å—Ç–∏ 100 —Å—É–º–º—ã –æ–ø–ª–∞—Ç—ã
#         print('–û—à–∏–±–∫–∞: –Ω–µ –∫—Ä–∞—Ç–Ω–æ 100')
#     else:
#         print('—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞')   # –µ—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ü–∏–∫–ª–æ–≤ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, —Ç–æ –æ–ø–µ—Ä–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∞
# else:
#     print('–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏')   # –µ—Å–ª–∏ –ø–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ –ª–æ–∂–Ω–æ, —Ç–æ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∑–Ω–∞–∫–æ–º

#### –ó–∞–¥–∞–Ω–∏–µ 2: –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–æ–¥–∞ –¥–æ—Å—Ç—É–ø–∞  
# –£—Å–ª–æ–≤–∏–µ:  
# –î–∞–Ω—ã —á–µ—Ç—ã—Ä–µ –±—É–ª–µ–≤—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:  
# python  

 
# –ö–æ–¥ –¥–æ—Å—Ç—É–ø–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π:  
# 1. (A and üòé or (C and D)  
# 2. (A != D) and (B == C)  
# 3. not (A or C) and (B or D)  

# –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ª–∏ –∫–æ–¥, –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–æ–º–µ—Ä —É—Å–ª–æ–≤–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ ‚Äî –≤—ã–≤–µ—Å—Ç–∏ "–û—Ç–∫–∞–∑".  

# A = False
# B = False
# C = False
# D = False 
# cond1 = A and B or (C and D)  
# cond2 = (A != D) and (B == C)   
# cond3 = not (A or C) and (B or D)           

# count = cond1 + cond2 + cond3
# print(count)
# if count == 1:
#     if A and B or (C and D):
#         print('—É—Å–ª–æ–≤–∏–µ 1')
#     elif (A != D) and (B == C):     # –í–æ—Ç —Ç—É—Ç –≤–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞—Å–∞–¥–∞!!!!
#         print('—É—Å–ª–æ–≤–∏–µ 2')
#     elif not (A or C) and (B or D):
#         print('—É—Å–ª–æ–≤–∏–µ 3')
# else:
#     print('–æ—Ç–∫–∞–∑')


# _________________________________________
#### –ó–∞–¥–∞–Ω–∏–µ 3: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è  

# –£—Å–ª–æ–≤–∏–µ:  
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:  
# 1. –î–ª–∏–Ω–∞ ‚â• 8 —Å–∏–º–≤–æ–ª–æ–≤.  
# 2. –°–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É —Ü–∏—Ñ—Ä—É.  
# 3. –°–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –∑–∞–≥–ª–∞–≤–Ω—É—é –∏ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–Ω—É—é –±—É–∫–≤—É.  
# 4. –°–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª –∏–∑ –Ω–∞–±–æ—Ä–∞ !@#$%^&*.  

# –í—ã–≤–æ–¥:  
# - –ï—Å–ª–∏ –ø–∞—Ä–æ–ª—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—Å–µ–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º: "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å".  
# - –ï—Å–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç: –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –≤—Å–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.  

# –ü—Ä–∏–º–µ—Ä:  
  
# –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: Pass123  
# –ù–∞—Ä—É—à–µ–Ω–∏—è: –¥–ª–∏–Ω–∞ < 8, –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª  
#_______________________________________________
  
# password = input('Password:')
# message = '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–∞—Ä–æ–ª—å'
# error_msg_list = []  # –ó–∞–¥–∞—é –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤(—Å—Ç—Ä–æ–∫ —Å –æ—à–∏–±–∫–∞–º–∏).
# # P.S. –ú–æ–∂–Ω–æ –±—ã–ª–æ –∏ —á–µ—Ä–µ–∑ —Å—á–µ—Ç—á–∏–∫ –∏ —Å—Ç—Ä–æ–∫–æ–π,–Ω–æ —Å–ø–∏—Å–∫–∏ –Ω—Ä–∞–≤—è—Ç—Å—è –±–æ–ª—å—à–µ

# # –æ–ø—Ä–µ–¥–µ–ª–∏–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–ª–∏—á–∏–µ/–æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤ –ø–∞—Ä–æ–ª–µ —Ü–∏—Ñ—Ä, —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤, –≤–µ—Ä—Ö–Ω–µ–≥–æ/–Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞
# upper_char = any(char.isupper() for char in password)
# lower_char = any(char.islower() for char in password)
# digit = any(char.isdigit() for char in password)

# #  —Å–æ–∑–¥–∞–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤
# special_chars_list = ['!', '@', '$', '%', '&', '*', '(', ')', '_', '+', '=', '-', '`', '~ ', '[', ']', '\'', '{', '}', '|']
# special_char = any(char in special_chars_list for char in password)

# # –û—Å—É—â–µ—Å—Ç–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å –ø–æ–º–æ—â—å—é —É—Å–ª–æ–≤–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
# if len(password) < 8:
#     error_msg_list.append('–¥–ª–∏–Ω–∞ < 8') 
# if not upper_char:
#     error_msg_list.append('–Ω–µ—Ç –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤')
# if not lower_char:
#     error_msg_list.append('–Ω–µ—Ç —Å—Ç—Ä–æ—á–Ω—ã—Ö –±—É–∫–≤')
# if not digit:
#     error_msg_list.append('–Ω–µ—Ç —Ü–∏—Ñ—Ä')
# if not special_char:
#     error_msg_list.append('–Ω–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤')
# if error_msg_list:  # –ï—Å–ª–∏ –≤ –≤—Å–ø–∏—Å–∫–µ –Ω–µ –ø—É—Å—Ç–æ(–æ—à–∏–±–∫–∏ –¥–æ–±–∞–≤–∏–ª–∏—Å—å), —Ç–æ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –±–µ–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø—è—Ç–æ–π
#     print(f'–£ –Ω–∞—Å —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: {', '.join(error_msg_list)}')
# else:
#     print("Password is safety")   


# ____________________________________________
#### –ó–∞–¥–∞–Ω–∏–µ 4: –ê–ª–≥–æ—Ä–∏—Ç–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —ç–≤–∞–∫—É–∞—Ü–∏–∏  
# –£—Å–ª–æ–≤–∏–µ:  
# –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–¥–∞–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —ç–≤–∞–∫—É–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö:  
# - temperature (int) ‚Äî —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ ¬∞C.  
# - co2 (int) ‚Äî —É—Ä–æ–≤–µ–Ω—å CO2 –≤ ppm.  
# - alarm (bool) ‚Äî –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —Ç—Ä–µ–≤–æ–≥–∞.  

# –ü—Ä–∞–≤–∏–ª–∞:  
# 1. –ï—Å–ª–∏ —Ç—Ä–µ–≤–æ–≥–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ (`alarm=True`): "–≠–≤–∞–∫—É–∞—Ü–∏—è: —Ç—Ä–µ–≤–æ–≥–∞".  
# 2. –ï—Å–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚â• 50 –∏–ª–∏ CO2 ‚â• 2000: "–≠–≤–∞–∫—É–∞—Ü–∏—è: –æ–ø–∞—Å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è".  
# 3. –ï—Å–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚â• 40 –∏ CO2 ‚â• 1000: "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –≤–æ–∑–º–æ–∂–Ω–∞ —ç–≤–∞–∫—É–∞—Ü–∏—è".  
# 4. –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ —É—Å–ª–æ–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: "–ù–æ—Ä–º–∞".  

# –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–∞–≤–∏–ª: 1 > 2 > 3 > 4.
# flag = True   # —Ñ–ª–∞–≥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –Ω–µ–∫–æ—Ä—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π —Ç–µ–º–ø –∏ –°–æ2
# question = '–¥–∞'   # —Ñ–ª–∞–≥ –¥–ª—è —Ü–∏–∫–ª–∞ (–º–æ–∂–Ω–æ –∏ –Ω–∞ –±—É–ª–µ–≤—ã—Ö –∏ –∫–∞–∫ —É–≥–æ–¥–Ω–æ)
# while True:
#     if question == '–¥–∞':
#         alarm = input('–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–≤–æ–≥—É(–≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ: –¥–∞/–Ω–µ—Ç)')
#         if alarm.lower() == '–¥–∞' or alarm.lower() == '–Ω–µ—Ç':  # –∏—Å–∫–ª—é—á–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ª—é–±–æ–≥–æ –∏–Ω–æ–≥–æ –≤–≤–æ–¥–∞, –∫—Ä–æ–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ
#             try:  # –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é(—Ç–æ–ª—å–∫–æ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
#                 temp = int(input('–≤–≤–µ–¥–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É: '))
#                 co2 = int(input('–≤–≤–µ–¥–∏ —É—Ä–æ–≤–µ–Ω—å Co2: '))
#             except (TypeError, ValueError):
#                 flag = False  # –≤ —Å–ª—É—á–∞–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, –º–µ–Ω—è–µ–º —Ñ–ª–∞–≥ –∏ –±–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.–¶–∏–∫–ª –∏–¥–µ—Ç –ø–æ –Ω–æ–≤–æ–º—É –∫—Ä—É–≥—É 
#                 print('type integer only!!! Once again')
#             print()

#             if flag:
#                 if alarm.lower() == '–¥–∞':
#                     print("–≠–≤–∞–∫—É–∞—Ü–∏—è: —Ç—Ä–µ–≤–æ–≥–∞")
#                 elif (temp >= 50 or co2 >= 2000):
#                     print("–≠–≤–∞–∫—É–∞—Ü–∏—è: –æ–ø–∞—Å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è")
#                 elif (temp >= 40 or co2 >= 1000):
#                     print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: –≤–æ–∑–º–æ–∂–Ω–∞ —ç–≤–∞–∫—É–∞—Ü–∏—è")
#                 else:
#                     print('–Ω–æ—Ä–º–∞')
#                 print('________________')

#                 question = input("–ü—Ä–æ–¥–æ–ª–∂–∏–º? –û—Ç–≤–µ—Ç—å '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç':")

#     elif question.lower() == '–Ω–µ—Ç':
#         print('–î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á')
#         break         
#     else:
#         print('–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç')
#         question = input("–ü—Ä–æ–¥–æ–ª–∂–∏–º? –û—Ç–≤–µ—Ç—å '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç':")

# ________________________________________
# #### –ó–∞–¥–∞–Ω–∏–µ 5: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º  
# –£—Å–ª–æ–≤–∏–µ:  
# –î–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è:  
# score = -5
  
# –ù–∞–ø–∏—à–∏—Ç–µ –æ–¥–∏–Ω —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç score –≤ –æ—Ü–µ–Ω–∫—É –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º:  
# - 90-100 ‚Üí "A"  
# - 80-89 ‚Üí "B"  
# - 70-79 ‚Üí "C"  
# - 60-69 ‚Üí "D"  
# - 0-59 ‚Üí "F"  
# - –ï—Å–ª–∏ score –Ω–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0-100 ‚Üí "–û—à–∏–±–∫–∞".  

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å if-elif-else, —Ç–æ–ª—å–∫–æ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã.
question_flag = True
while True:
    count_flag = True 
    if question_flag:
        try:
            score = int(input('Enter your count: '))
        except ValueError:
            print('–¢–æ–ª—å–∫–æ —á–∏—Å–ª–∞')
            count_flag = False
        if count_flag:
            print('A' if 100 >= score >= 90 else 'B' if 89 >= score >= 80 else 'C' if 79 >= score >= 70 else "D" if 69 >= score >= 60 else 'F' if 59 >= score >= 0 else '–û—à–∏–±–∫–∞')
            question = input('–ø—Ä–æ–¥–æ–ª–∂–∏–º(–¥–∞/–Ω–µ—Ç)?: ')
            question_flag = False

    elif question.lower() == '–¥–∞':
        question_flag = True    
    elif question.lower() == '–Ω–µ—Ç':
        print('–î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á')
        break         
    else:
        question_flag = False
        print('–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç')
        question = input('–ø—Ä–æ–¥–æ–ª–∂–∏–º(–¥–∞/–Ω–µ—Ç)?: ')

